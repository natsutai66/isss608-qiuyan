---
title: "Take Home Exercise 1"
description: "Demographic structures and distribution of Singapore in 2024"
author: "Tai Qiu Yan"
date: "May 2, 2024"
date-modified: "last-modified"
format: html
editor: visual
execute:
  eval: true
  echo: true
  warning: false
---

# 1 **Overview**

# 2 Data Pre-processing and Exploration

## 2.1 Installing and loading the required libraries

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

## 2.2 Importing dataset

```{r}
population_data <- read_csv("respopagesex2024.csv") %>%
  mutate(Age = as.numeric(Age))

glimpse(population_data)
```

## 2.3 Dataset for visuallisation 1

```{r}
# Aggregate population by Age and Sex
pyramid_data <- population_data %>%
  group_by(Age, Sex) %>%
  summarise(Pop = sum(Pop), .groups = "drop") %>%
  mutate(Pop = ifelse(Sex == "Males", -Pop, Pop))  # Make male population negative for mirroring
```


## 2.4 Dataset for visuallisation 2

```{r}
planning_area_population <- population_data %>%
  group_by(PA) %>%
  summarise(Total_Pop = sum(Pop), .groups = "drop") %>%
  filter(Total_Pop > 0) %>%   
  arrange(desc(Total_Pop))
```

## 2.5 Dataset for visuallisation 3
```{r}
age_distribution <- population_data %>%
  mutate(Age = as.numeric(Age)) %>%
  filter(Pop > 0) %>%
  uncount(weights = Pop)
```

# 3 Data visuallisation

## 3.1 Visuallisation 1 - Population Pyramid

```{r fig.width=14, fig.height=8}
# --- Plot 1: Population Pyramid ---
pyramid_data <- population_data %>%
  mutate(
    AgeGroup = cut(
      Age,
      breaks = c(seq(0, 100, by = 5), Inf),
      right = FALSE,
      labels = c(paste(seq(0, 95, 5), seq(4, 99, 5), sep = "â€“"), "100+")
    )
  ) %>%
  filter(!is.na(AgeGroup)) %>%
  group_by(AgeGroup, Sex) %>%
  summarise(Pop = sum(Pop), .groups = "drop") %>%
  mutate(Pop = ifelse(Sex == "Males", -Pop, Pop))

p1 <- ggplot(pyramid_data, aes(x = AgeGroup, y = Pop, fill = Sex)) +
  geom_bar(stat = "identity", width = 0.9, color = "white") +
  coord_flip() +
  scale_y_continuous(
    labels = function(x) scales::comma(abs(x)),
    breaks = scales::pretty_breaks(n = 8)
  ) +
  scale_fill_manual(values = c("Males" = "#3182bd", "Females" = "#f768a1")) +
  labs(
    title = "Population Pyramid of Singapore (June 2024)",
    x = "Age Group (5-year bins)",
    y = "Population",
    fill = "Sex"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14),
    axis.text = element_text(size = 9),
    axis.title.x = element_text(margin = margin(t = 10)),
    legend.position = "none"  # hide this legend, we'll collect one at the end
  )

# --- Plot 2: Custom Age Group Bar Chart ---
# Use simple labels for Age Groups
pyramid_data_grouped <- population_data %>%
  mutate(
    AgeGroup = case_when(
      Age <= 12 ~ "Children",
      Age >= 13 & Age <= 18 ~ "Teenager",
      Age > 18 & Age <= 25 ~ "Young Adult",
      Age >= 26 & Age <= 44 ~ "Adult",
      Age >= 45 & Age <= 65 ~ "Middle-age",
      Age > 65 ~ "Elderly"
    )
  ) %>%
  filter(!is.na(AgeGroup)) %>%
  group_by(AgeGroup, Sex) %>%
  summarise(Total_Pop = sum(Pop), .groups = "drop") %>%
  mutate(AgeGroup = factor(
    AgeGroup,
    levels = c("Children", "Teenager", "Young Adult", "Adult", "Middle-age", "Elderly")
  ))

p2 <- ggplot(pyramid_data_grouped, aes(x = AgeGroup, y = Total_Pop, fill = Sex)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_y_continuous(labels = scales::comma_format()) +
  scale_fill_manual(values = c("Males" = "#3182bd", "Females" = "#f768a1")) +
  labs(
    title = "Population by Age Groups",
    x = "Age Group",
    y = "Total Population",
    fill = "Sex"
  ) +
  theme_minimal() +
  theme(
    axis.text = element_text(size = 10),
    plot.title = element_text(size = 14, face = "bold"),
    legend.position = "bottom"
  )

# --- Combine with shared legend ---
(p1 + p2) + plot_layout(guides = "collect") & theme(legend.position = "bottom")
```

## 3.2 Visuallisation 2 - Horizontal Bar Plot of Population Density

```{r fig.height=12, fig.width=8}
ggplot(planning_area_population, aes(x = reorder(PA, Total_Pop), y = Total_Pop)) +
  geom_col(fill = "steelblue") +
  coord_flip() +
  labs(
    title = "Population Density by Planning Area (June 2024)",
    x = "Planning Area",
    y = "Total Population"
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 10),
    plot.title = element_text(size = 14, face = "bold")
  )
```

## 3.3 Visuallisation 3 - Boxplot of Age Distribution by Planning Area

```{r fig.height=12, fig.width=8}
# Order planning areas by median age for better readability
ordered_area <- age_distribution %>%
  group_by(PA) %>%
  summarise(median_age = median(Age)) %>%
  arrange(median_age) %>%
  pull(PA)

# Convert PA into factor with specified order
age_distribution <- age_distribution %>%
  mutate(PA = factor(PA, levels = ordered_area))

# Boxplot
ggplot(age_distribution, aes(x = Age, y = PA)) +
  geom_boxplot(fill = "skyblue", color = "grey30", outlier.size = 0.5) +
  labs(
    title = "Age Distribution by Planning Area (June 2024)",
    x = "Age",
    y = "Planning Area"
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 9),
    plot.title = element_text(face = "bold", size = 14)
  )
```